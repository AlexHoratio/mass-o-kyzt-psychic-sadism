[gd_scene load_steps=5 format=2]

[ext_resource path="res://Graphics/PlanetKy/Entities/Kyztlings/kyztling1.png" type="Texture" id=1]


[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

var voice

func _ready():
	randomize()
	add_to_group(\"kyztlings\")
	
	for kyztling in get_tree().get_nodes_in_group(\"kyztlings\"):
		add_collision_exception_with(kyztling)
		
	voice = get_tree().get_meta(\"voice\")
	add_collision_exception_with(voice)
	
func _process(delta):
	var movement_vector = Vector2(0, 0)
	
	movement_vector += get_attraction_to_voice()
	movement_vector += get_attraction_from_kyztlings()
	
	set_animation_from_speed(movement_vector.length())
	
	if movement_vector.length() > 10:
		if movement_vector.x < 0:
			$Sprite.flip_h = true
		elif movement_vector.x > 0:
			$Sprite.flip_h = false
	
	move_and_collide(movement_vector*delta)
	
#	if voice.swarm_size > 10:
#		if randf() > 0.001:
#			var kyztlings = get_tree().get_nodes_in_group(\"kyztlings\")
#
#			var closest_distance = 999
#			var closest_kyztling
#			for kyztling in kyztlings:
#				if position.distance_to(kyztling.position) < 50 and not(kyztling == self):
#					closest_kyztling = kyztling
#					break
#
#			position = position.linear_interpolate(closest_kyztling.position, 0.5)
#			scale += Vector2(0.5, 0.5)
#			closest_kyztling.queue_free()
#			voice.swarm_size -= 1
#			randomize()
			
	
func set_animation_from_speed(speed: float):
	if speed == 0:
		$Sprite.frame = 0
		$Sprite/walk.stop()
	else:
		if not($Sprite/walk.is_playing()):
			$Sprite/walk.play(\"walk\")
		
		$Sprite/walk.playback_speed = clamp(4*(speed*1.2*0.01), 0, 4)
		
func get_attraction_to_voice() -> Vector2:
	var attraction = Vector2(0, 0)
	
	var distance_from_voice = position.distance_to(voice.position)
	var speed = 1
	
	if distance_from_voice > 100:
		speed = distance_from_voice
	elif distance_from_voice > 20:
		speed = distance_from_voice/1.2
	elif distance_from_voice > 1:
		speed = -2*pow(distance_from_voice/20, -2)
	else:
		speed = 0
		
	attraction = Vector2(-speed, 0).rotated(position.angle_to_point(voice.position))
	
	return attraction
	
func get_attraction_from_kyztlings() -> Vector2:
	var attraction = Vector2(0, 0)
	var repel_radius = 20
	
	for kyztling in get_tree().get_nodes_in_group(\"kyztlings\"):
		if not(kyztling == self):
			var distance_from_kyztling = position.distance_to(kyztling.position)
			var speed = 1
			
			if distance_from_kyztling < repel_radius:
				speed = pow(distance_from_kyztling/repel_radius, -2)
			else:
				speed = 0
				
			if speed > 5:
				attraction += Vector2(speed, 0).rotated(position.angle_to_point(kyztling.position))
	
	return attraction"

[sub_resource type="Animation" id=2]
resource_name = "walk"
loop = true
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.5, 0.75 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 4 ]
}

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 4, 1 )

[node name="follower" type="KinematicBody2D"]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )
hframes = 5
frame = 1

[node name="walk" type="AnimationPlayer" parent="Sprite"]
anims/walk = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 1, 5 )
shape = SubResource( 3 )
